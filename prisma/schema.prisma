// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model UserClient {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  email        String   @unique
  CPF          String   @unique
  telefone     String?
  ownerName    String
  idade        Int?
  CEP          String?
  endereco     String?
  bairro       String?
  estado       String?
  complemento  String?
  pets         Pet[]    @relation("UserPets") // Relação entre Usuário e Pet
  atendimentos Atendimento[] @relation("UserAtendimentos") // Um funcionário tem vários atendimentos
}


model UserFunc {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  CPF      String   @unique
  senha    String 
  name     String 
  cargo    String
    atendimentos Atendimento[] @relation("FuncionarioAtendimentos") // Relação entre UserFunc e Atendimento
}

model Pet {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  breed    String?
  species  String?
  age      String?
  sexo     String?
  peso     String?
  ownerId  String   @db.ObjectId
  owner    UserClient     @relation("UserPets", fields: [ownerId], references: [id]) // Referência ao Usuario
  atendimentos Atendimento[] @relation("PetAtendimentos") // Relação entre Pet e Atendimento
}

model Atendimento {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  tipo         String
  dataHora     String
  atendido     Boolean   @default(false)
  userId       String    @db.ObjectId
  user         UserClient @relation("UserAtendimentos", fields: [userId], references: [id]) // Referência ao UserClient
  petId        String    @db.ObjectId
  pet          Pet       @relation("PetAtendimentos", fields: [petId], references: [id], onDelete: Cascade) // Referência ao Pet
  funcionarioId String    @db.ObjectId
  funcionario  UserFunc  @relation("FuncionarioAtendimentos", fields: [funcionarioId], references: [id]) // Referência ao UserFunc
}
